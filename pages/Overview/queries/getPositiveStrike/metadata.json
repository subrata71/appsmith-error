{
  "pluginType": "DB",
  "pluginId": "redshift-plugin",
  "unpublishedAction": {
    "name": "getPositiveStrike",
    "datasource": {
      "name": "junoDataWarehouse",
      "pluginId": "redshift-plugin",
      "messages": [],
      "isAutoGenerated": false,
      "id": "junoDataWarehouse",
      "deleted": false,
      "policies": [],
      "userPermissions": []
    },
    "pageId": "Overview",
    "actionConfiguration": {
      "timeoutInMillisecond": 90000,
      "paginationType": "NONE",
      "encodeParamsToggle": true,
      "body": "SELECT\n   t.*\nFROM\n    (SELECT _id AS user_id,email FROM mongo_api_user WHERE 1=1 AND _id = '{{ lib.getAccountDetails().juno_user_id }}') u\nLEFT JOIN\n    (select distinct * from (select user_id,\n    case when strike_name='plaid_customer_score_return_risk_incoming_deposit' then 'Plaid Transfer'\n     when strike_name='balance_after_first_deposit' then 'Balance after first deposit'\n     when strike_name='dd_with_amount' then 'Direct Deposit' \n    end as strike_name,\n    FIRST_VALUE(added_on) OVER (PARTITION BY user_id ORDER BY added_on DESC\n    ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) as last_added_on\n    from userstrikes)\n    ) t\nON\n    t.user_id = u.user_id;",
      "selfReferencingDataPaths": []
    },
    "executeOnLoad": true,
    "dynamicBindingPathList": [
      {
        "key": "body"
      }
    ],
    "isValid": true,
    "invalids": [
      "'Query timeout' field must be an integer between 0 and 60000"
    ],
    "messages": [],
    "jsonPathKeys": [
      " lib.getAccountDetails().juno_user_id "
    ],
    "userSetOnLoad": false,
    "confirmBeforeExecute": false,
    "policies": [],
    "userPermissions": [],
    "createdAt": "2023-10-09T10:17:36Z"
  },
  "id": "Overview_getPositiveStrike",
  "deleted": false,
  "gitSyncId": "651ee25c6e58595db41e838c_651ee2c66e58595db41e8414"
}