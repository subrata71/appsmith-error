{
  "pluginType": "DB",
  "pluginId": "redshift-plugin",
  "unpublishedAction": {
    "name": "getFlaggingHistory",
    "datasource": {
      "name": "junoDataWarehouse",
      "pluginId": "redshift-plugin",
      "messages": [],
      "isAutoGenerated": false,
      "id": "junoDataWarehouse",
      "deleted": false,
      "policies": [],
      "userPermissions": []
    },
    "pageId": "Overview",
    "actionConfiguration": {
      "timeoutInMillisecond": 90000,
      "paginationType": "NONE",
      "encodeParamsToggle": true,
      "body": "select\n    user_id,\n    u.email as email,\n    flag_time,\n    logic_tags\nfrom\n    (\n        select\n            user_id,\n            key,\n            value,\n            timestamp 'epoch' + cast(tf.added_on AS bigint) / 1000 * interval '1 second' as flag_time,\n            tf.logic_tags\n        from\n            mongo_api_fraudcase f,\n            f.triggered_effects as tf at tf_index,\n            unpivot tf as value at key\n        where\n            key = 'tag'\n            and value = 'FLAG_USER'\n    ) fr\n    left join mongo_api_user u ON u._id = fr.user_id\nwhere\n    1 = 1\n    and u.email = '{{ lib.getPersonalDetails().email }}'\n order by flag_time desc",
      "selfReferencingDataPaths": []
    },
    "executeOnLoad": false,
    "dynamicBindingPathList": [
      {
        "key": "body"
      }
    ],
    "isValid": true,
    "invalids": [
      "'Query timeout' field must be an integer between 0 and 60000"
    ],
    "messages": [],
    "jsonPathKeys": [
      " lib.getPersonalDetails().email "
    ],
    "userSetOnLoad": true,
    "confirmBeforeExecute": false,
    "policies": [],
    "userPermissions": [],
    "createdAt": "2023-09-14T16:16:47Z"
  },
  "id": "Overview_getFlaggingHistory",
  "deleted": false,
  "gitSyncId": "650322c36e58595db41e6e21_65032e306e58595db41e6f68"
}