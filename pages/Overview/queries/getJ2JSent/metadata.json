{
  "pluginType": "DB",
  "pluginId": "redshift-plugin",
  "unpublishedAction": {
    "name": "getJ2JSent",
    "datasource": {
      "name": "junoDataWarehouse",
      "pluginId": "redshift-plugin",
      "messages": [],
      "isAutoGenerated": false,
      "id": "junoDataWarehouse",
      "deleted": false,
      "policies": [],
      "userPermissions": []
    },
    "pageId": "Overview",
    "actionConfiguration": {
      "timeoutInMillisecond": 90000,
      "paginationType": "NONE",
      "encodeParamsToggle": true,
      "body": "SELECT u1.email,\n       u1.synapse_permission,\n       case when u1.permission.transaction.debit=false then 'flagged' else 'not flagged' end as juno_status\nfrom (SELECT\n   *\nFROM\n    (SELECT _id AS uid,email FROM mongo_api_user WHERE 1=1 AND email = '{{ lib.getPersonalDetails().email }}') u\nLEFT JOIN\n    (SELECT user_id,synapse_to.user._id::text as to_synapse_user_id\n     FROM mongo_api_transaction\n     WHERE\n          status.code = 4\n          AND side = 1\n          AND transaction_type.name = 'external_transfer'\n          AND synapse_to.type = 'IC-DEPOSIT-US'\n          AND synapse_from.type = 'IC-DEPOSIT-US'\n     GROUP BY user_id,to_synapse_user_id\n     ) t\nON\n    t.user_id = u.uid) q1 join mongo_api_user u1 on u1.synapse_user_id::text=q1.to_synapse_user_id::text\n",
      "selfReferencingDataPaths": []
    },
    "executeOnLoad": false,
    "dynamicBindingPathList": [
      {
        "key": "body"
      }
    ],
    "isValid": true,
    "invalids": [
      "'Query timeout' field must be an integer between 0 and 60000"
    ],
    "messages": [],
    "jsonPathKeys": [
      " lib.getPersonalDetails().email "
    ],
    "userSetOnLoad": true,
    "confirmBeforeExecute": false,
    "policies": [],
    "userPermissions": [],
    "createdAt": "2023-09-14T16:16:47Z"
  },
  "id": "Overview_getJ2JSent",
  "deleted": false,
  "gitSyncId": "650322c36e58595db41e6e21_65032e626e58595db41e6f6c"
}